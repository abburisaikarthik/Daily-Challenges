class Solution {
    int largestSubsquare(int n, char a[][]) {
        // code here
        //prefix sum row wise and col wise.
        int psr [][]= new int [n][n];
        int psc [][] = new int [n][n];
        
        for(int i =0;i<n;i++)
        {
            for(int j =0;j<n;j++)
            {
                psr[i][j] = (a[i][j]=='X'?(j==0? 1:psr[i][j-1]+1):0);
                psc [j][i] = (a[j][i]=='X'?(j==0?1:psc[j-1][i]+1):0);
            }
        }
        
        int max =0;
        
        for(int i= n-1;i>=0;i--)
        {
            for(int j =n-1;j>=0;j--)
            {
                int size = Math.min(psr[i][j],psc[i][j]);
                while(size>max)
                {
                    if(psr[i-size+1][j]>=size&&psc[i][j-size+1]>=size)
                    {
                        max=size;
                        break;
                    }
                    else 
                    size--;
                }
            }
        }
        return max;
    }
};